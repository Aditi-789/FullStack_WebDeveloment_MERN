*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.container{
    background-color: brown;
    height: 500px;
    border: 3px solid black;
    display: grid;
    /* grid-template-columns: 200px 200px 210px;
    grid-template-rows: 90px 90px 90px 90px; */
    grid-template-columns: 100px repeat(2, 1fr);
    grid-template-rows: repeat(4,1fr);
    gap: 10px;
}
.box{
    background-color: aqua;
    border: 3px solid black;
}
#box1{
    grid-column-start: 1;
    grid-column-end: 3;
    /* shorthand: grid-column */
}
#box3{
    grid-row-start: 2;
    grid-row-end: 4;
    /* shorthand: grid-row */
}
/* fr-> flexible grid
In CSS Grid, grid-row, grid-column, and grid-area are properties that help define the layout of grid items within a grid container.

1. grid-row:
Specifies the position and span of a grid item across rows.
It is a shorthand for grid-row-start and grid-row-end.
Syntax:- grid-row: start / end;

2. grid-column:
Specifies the position and span of a grid item across columns.
It is a shorthand for grid-column-start and grid-column-end.
Syntax: grid-column: start / end;

3. grid-area:
Defines both the row and column position of a grid item, effectively placing it in a specific area.
It is a shorthand for grid-row-start, grid-row-end, grid-column-start, and grid-column-end.
Syntax: grid-area: row-start / column-start / row-end / column-end;
*/